
@{
    ViewBag.Title = "AutoComplete";
    Layout = null;
}

    <link rel="stylesheet" href="http://ajax.googleapis.com/ajax/libs/angular_material/1.0.0/angular-material.min.css">
    <script src="http://ajax.googleapis.com/ajax/libs/angularjs/1.4.8/angular.min.js"></script>
    <script src="http://ajax.googleapis.com/ajax/libs/angularjs/1.4.8/angular-animate.min.js"></script>
    <script src="http://ajax.googleapis.com/ajax/libs/angularjs/1.4.8/angular-aria.min.js"></script>
    <script src="http://ajax.googleapis.com/ajax/libs/angularjs/1.4.8/angular-messages.min.js"></script>
    <script src="http://ajax.googleapis.com/ajax/libs/angular_material/1.0.0/angular-material.min.js"></script>

    <script language="javascript">
        angular
           .module('firstApplication', ['ngMaterial'])
           .controller('autoCompleteController', autoCompleteController);

       

        function autoCompleteController($timeout, $q, $log, $http, $scope) {
            var self = this;
            self.simulateQuery = false;
            self.isDisabled = false;
            // list of states to be displayed
            self.authorExecutive = loadExecutive();
            self.querySearch = querySearch;
            self.selectedItemChange = selectedItemChange;
            self.searchTextChange = searchTextChange;
            self.newExecutive = newExecutive;
            function newExecutive(state) {
                alert("This functionality is yet to be implemented!");
            }
            function querySearch(query) {
                var results = query ? self.authorExecutive.filter(createFilterFor(query)) : self.authorExecutive, deferred;
                if (self.simulateQuery) {
                    deferred = $q.defer();
                    $timeout(function () {
                        deferred.resolve(results);
                    },
                       Math.random() * 1000, false);
                    return deferred.promise;
                } else {
                    return results;
                }
            }
            function searchTextChange(text) {
                $log.info('Text changed to ' + text);
            }
            function selectedItemChange(item) {
                $log.info('Item changed to ' + JSON.stringify(item));
            }
            //build list of states as map of key-value pairs
            function loadExecutive() {
                var allExecutive = 'Amit, Anurag, Aman, Akash,\
                 Vinay, Vishal, Dheeraj, dhram, vinod,\
                 shadam';

               // var allExecutive = 'Amit';
                return allExecutive.split(/, +/g).map(function (Executive) {
                    return {
                        value: Executive.toLowerCase(),
                        display: Executive
                    };
                });
            }


            function GetExecutiveList() {
                var appPath = "http://localhost/RMSAPI/api/";
                var ApiReference = "CommonList/getExecutiveList";
                var obj = null;
                var getExecutiveList = $http.get(appPath + ApiReference, obj);
                //var getExecutiveList = AJService.GetDataFromAPI("CommonList/getExecutiveList", null);
                getExecutiveList.then(function (Executive) {
                    //$scope.ExecutiveList = Executive.data.query;
                   ExecutiveList = Executive.data.query;
                   //$scope.AuthorName = ExecutiveList[0].executiveName
                   $scope.AuthorName = 'vinay';

                   return $scope.AuthorName.split(/, +/g).map(function (Author) {
                       return {
                           value: Author.toLowerCase(),
                           display: Author
                       };
                   });
                   //alert($scope.AuthorName);
                });
            }

            //filter function for search query
            function createFilterFor(query) {
                var lowercaseQuery = angular.lowercase(query);
                return function filterFn(Executive) {
                    return (Executive.value.indexOf(lowercaseQuery) === 0);
                };
            }
        }
    </script>

<body ng-app="firstApplication" ng-cloak>
    <div ng-controller="autoCompleteController as ctrl" layout="column" ng-cloak>
        <md-content class="md-padding">
            <form ng-submit="$event.preventDefault()">
                <md-autocomplete ng-disabled="ctrl.isDisabled"
                                 md-no-cache="ctrl.noCache"
                                 md-selected-item="ctrl.selectedItem"
                                 md-search-text-change="ctrl.searchTextChange(ctrl.searchText)"
                                 md-search-text="ctrl.searchText"
                                 md-selected-item-change="ctrl.selectedItemChange(item)"
                                 md-items="item in ctrl.querySearch(ctrl.searchText)"
                                 md-item-text="item.display"
                                 md-min-length="0"
                                 placeholder="Author Executive">
                    <md-item-template>
                        <span md-highlight-text="ctrl.searchText" md-highlight-flags="^i">{{item.display}}</span>
                    </md-item-template>
                    <md-not-found>
                        No Executive matching "{{ctrl.searchText}}" were found.
                    </md-not-found>
                </md-autocomplete>
            </form>
        </md-content>
    </div>
</body>


